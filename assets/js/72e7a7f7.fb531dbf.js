"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[2065],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=u(n),d=a,g=h["".concat(s,".").concat(d)]||h[d]||p[d]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},8229:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},assets:function(){return c},toc:function(){return p},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={slug:"2023-09-14-ghc-update",title:"IOG GHC Update #17",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},s=void 0,u={permalink:"/2023-09-14-ghc-update",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2023-09-14-ghc-update-17.md",source:"@site/blog/2023-09-14-ghc-update-17.md",title:"IOG GHC Update #17",description:"Triweekly update from the GHC DevX team at IOG.",date:"2023-09-14T00:00:00.000Z",formattedDate:"September 14, 2023",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:1.48,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"},{name:"Joshua Meredith",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"josh"}],frontMatter:{slug:"2023-09-14-ghc-update",title:"IOG GHC Update #17",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},nextItem:{title:"IOG GHC Update #16",permalink:"/2023-08-24-ghc-update"}},c={authorsImageUrls:[void 0,void 0,void 0,void 0]},p=[{value:"ICFP",id:"icfp",children:[],level:2},{value:"Performance",id:"performance",children:[],level:2},{value:"GHC build",id:"ghc-build",children:[],level:2},{value:"GHC User Experience",id:"ghc-user-experience",children:[],level:2},{value:"JS backend",id:"js-backend",children:[],level:2}],h={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Triweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"icfp"},"ICFP"),(0,i.kt)("p",null,"Most of the team was at ICFP 2023 last week!"),(0,i.kt)("p",null,"Jeff ",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/live/2YAMKwQf3NA?si=6UGwIrh9zPtFxVru&t=11207"},"presented")," our paper ",(0,i.kt)("a",{parentName:"p",href:"https://dl.acm.org/doi/abs/10.1145/3609025.3609476"},"Stretching the Glasgow Haskell Compiler: Nourishing GHC with Domain-Driven Design")," at the Funarch workshop colocated with ICFP. This paper is a 6 page version of our white paper ",(0,i.kt)("a",{parentName:"p",href:"https://hsyl20.fr/home/files/papers/2022-ghc-modularity.pdf"},"Modularizing GHC"),". It establishes anti-modular anti-patterns that we have found while modularizing GHC, discusses why these anti-patterns are problematic, and provides recommendation for other functional language software architects."),(0,i.kt)("p",null,"Luite gave a ",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/live/Rvs88m2mdig?si=dkWfelW58d22XJ3b&t=15863"},"lightning talk")," at the Haskell Symposium on the status of the JavaScript backend in GHC, and about what you can do to make your packages work with it."),(0,i.kt)("h2",{id:"performance"},"Performance"),(0,i.kt)("p",null,"Sylvain: added some missing rewrite rules for cheaper Int64/Word64 to Float/Double conversions.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23907"},"GHC#23907"),", ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11170"},"GHC!11170"),", and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/haskell/core-libraries-committee/issues/203"},"CLC proposal #203"),"."),(0,i.kt)("h2",{id:"ghc-build"},"GHC build"),(0,i.kt)("p",null,"Hamish tried to build GHC head with haskell.nix and faced an issue with conflicting rules: two source files (",(0,i.kt)("inlineCode",{parentName:"p"},"Stack.cmm")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Stack.c"),") would produce the same output object code (",(0,i.kt)("inlineCode",{parentName:"p"},"Stack.o"),").\nThis isn't an issue for GHC which uses its adhoc build system which produces ",(0,i.kt)("inlineCode",{parentName:"p"},"cmm/Stack.o")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"c/Stack.o")," in this case. But it is for Haskell.nix and cabal-install.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23898"},"GHC#23898")," and ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11160"},"GHC!11160")," for Sylvain's fix."),(0,i.kt)("h2",{id:"ghc-user-experience"},"GHC User Experience"),(0,i.kt)("p",null,"Jeff finally drove home the Haskell Foundation Error Index link ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10395"},"merge request"),"; it should be merged shortly. Now once GHC issues a type error the HF error link will be an actual link to its entry in the Haskell Foundation Error Index."),(0,i.kt)("h2",{id:"js-backend"},"JS backend"),(0,i.kt)("p",null,"Sylvain: updated the ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/wikis/javascript-backend/bug_triage"},"wiki\npage"),"\nabout GHC tests still failing with the JS backend. Some failures were due to\nissues with the tests themselves (Cabal not finding the right ",(0,i.kt)("inlineCode",{parentName:"p"},"ghc-pkg")," program\nto use) and have been fixed in\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11193"},"GHC!11193"),"."))}d.isMDXComponent=!0}}]);