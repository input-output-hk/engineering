"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[2056],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return g}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=p(a),g=r,m=h["".concat(s,".").concat(g)]||h[g]||c[g]||i;return a?n.createElement(m,o(o({ref:t},u),{},{components:a})):n.createElement(m,o({ref:t},u))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},3519:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return u},toc:function(){return c},default:function(){return g}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=["components"],l={slug:"2024-02-08-ghc-update",title:"IOG GHC Update #24",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},s=void 0,p={permalink:"/2024-02-08-ghc-update",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2024-02-08-ghc-update-24.md",source:"@site/blog/2024-02-08-ghc-update-24.md",title:"IOG GHC Update #24",description:"Triweekly update from the GHC DevX team at IOG.",date:"2024-02-08T00:00:00.000Z",formattedDate:"February 8, 2024",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:2.14,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"},{name:"Joshua Meredith",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"josh"}],frontMatter:{slug:"2024-02-08-ghc-update",title:"IOG GHC Update #24",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},prevItem:{title:"IOG GHC Update #25",permalink:"/2024-02-29-ghc-update"},nextItem:{title:"IOG GHC Update #23",permalink:"/2024-01-18-ghc-update"}},u={authorsImageUrls:[void 0,void 0,void 0,void 0]},c=[{value:"High level summary",id:"high-level-summary",children:[],level:2},{value:"Details",id:"details",children:[],level:2}],h={toc:c};function g(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Triweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,i.kt)("p",null,"We're investigating a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/ouroboros-consensus/issues/465"},"performance regression in ouroboros-consensus"),".\nWe're still working on reproducing the issue with a profiling compiler.\nInferring performance behavior from intermediate codes (Core, STG) proved to be difficult because the code is heavily polymorphic and allocates a lot.\nWe'll try to specialize it more in the coming weeks."),(0,i.kt)("p",null,"GHC 9.10 is about to fork from GHC's main development branch. We worked on several patches that are planned to be integrated into 9.10:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"pure Haskell implementation of ",(0,i.kt)("inlineCode",{parentName:"li"},"bytestring")," (",(0,i.kt)("a",{parentName:"li",href:"https://github.com/haskell/bytestring/pull/631"},"bytestring#631"),")"),(0,i.kt)("li",{parentName:"ul"},"support for C sources (e.g. sqlite) with the JS backend (",(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11502"},"GHC!11502"),")"),(0,i.kt)("li",{parentName:"ul"},"JSTG optimizer (",(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11507"},"GHC!11507"),") ")),(0,i.kt)("p",null,"Some maintenance was done:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"upgraded a dependency of GHCup to be compatible with GHC 9.6"),(0,i.kt)("li",{parentName:"ul"},"upgraded GHC's CI images"),(0,i.kt)("li",{parentName:"ul"},"Simplified JS codegen to use newish STG tag-inference mechanism")),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("p",null,"Sylvain: released ",(0,i.kt)("a",{parentName:"p",href:"https://hackage.haskell.org/package/haskus-utils-variant-3.4"},"haskus-utils-variant\n3.4"),", a dependency\nof ",(0,i.kt)("a",{parentName:"p",href:"https://www.haskell.org/ghcup/"},"ghcup"),", to be compatible with GHC 9.6 and\nabove. See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/haskus/packages/issues/51"},"https://github.com/haskus/packages/issues/51")),(0,i.kt)("p",null,"Sylvain: pure Haskell implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"bytestring")," (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/haskell/bytestring/pull/631"},"bytestring#631"),").\nUpdated several times after several reviews. Now merged."),(0,i.kt)("p",null,"Sylvain: support for C sources (e.g. sqlite) with the JS backend (",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11502"},"GHC!11502"),").\nAdded test using ",(0,i.kt)("inlineCode",{parentName:"p"},"sqlite")," in GHC's testsuite. It has been reverted because it's too large and has too many dependencies.\nIt will be replaced by several smaller tests. ",(0,i.kt)("inlineCode",{parentName:"p"},"direct-sqlite")," JS support should be upstreamed and the package added to ",(0,i.kt)("inlineCode",{parentName:"p"},"head.hackage"),"."),(0,i.kt)("p",null,"Jeff: added test to GHC's testsuite tracking the size of a binary file (",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11551"},"GHC!11551"),").\nThis is useful to avoid regressions and to check progress with the code generator improvements (JS and native)."),(0,i.kt)("p",null,"Jeff: upgraded Node.js in GHC's CI images (",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ci-images/-/merge_requests/137"},"ci-images!137"),") The corresponding\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/alpmestan/ghc.nix/pull/187"},"PR")," for ghc.nix is also up. This way ",(0,i.kt)("inlineCode",{parentName:"p"},"ghc.nix")," and the GHC CI will use the same version of emscripten and nodejs."),(0,i.kt)("p",null,"Josh: successfully ported a Space Invaders game from using GHC's WebAssembly backend to using GHC's JavaScript backend.\nWrote a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/engineering/pull/80"},"blog post draft")," about it. It will be published in the upcoming weeks."),(0,i.kt)("p",null,"Luite: merge request for the JSTG optimizer has been opened: ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11507"},"GHC!11507"),".\nCI is passing and it should be merged soon after reviews."),(0,i.kt)("p",null,"Jeff: updated GHC's CODEOWNERS file (",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/12032"},"GHC!12032"),")"),(0,i.kt)("p",null,"Sylvain: wrote a CLC proposal about bitcast primops (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/haskell/core-libraries-committee/issues/253"},"CLC proposal#253"),")"),(0,i.kt)("p",null,"Josh: reworked the performance report based on new benchmarks and graphs."),(0,i.kt)("p",null,"Josh: changed JS codegen to use GHC tags to track evaluation knowledge, allowing us to remove a custom inference mechanism and reduce maintenance burden ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11857"},"GHC!11857")),(0,i.kt)("p",null,"Jeff/Luite: Helped fix a bug in the JavaScript linker that showed up because of the migration from ",(0,i.kt)("inlineCode",{parentName:"p"},"base")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"ghc-internal"),": ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/commit/20b702b582279ce2573ec4fb5908b31eaeeb8918"},"https://gitlab.haskell.org/ghc/ghc/-/commit/20b702b582279ce2573ec4fb5908b31eaeeb8918")))}g.isMDXComponent=!0}}]);