"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[263],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=p(n),g=r,m=h["".concat(s,".").concat(g)]||h[g]||u[g]||i;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1687:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return c},toc:function(){return u},default:function(){return g}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={slug:"2023-10-05-ghc-update",title:"IOG GHC Update #18",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},s=void 0,p={permalink:"/2023-10-05-ghc-update",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2023-10-05-ghc-update-18.md",source:"@site/blog/2023-10-05-ghc-update-18.md",title:"IOG GHC Update #18",description:"Triweekly update from the GHC DevX team at IOG.",date:"2023-10-05T00:00:00.000Z",formattedDate:"October 5, 2023",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:1.805,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"},{name:"Joshua Meredith",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"josh"}],frontMatter:{slug:"2023-10-05-ghc-update",title:"IOG GHC Update #18",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},prevItem:{title:"Internship in GHC at IOG",permalink:"/2023-10-25-internship"},nextItem:{title:"IOG GHC Update #17",permalink:"/2023-09-14-ghc-update"}},c={authorsImageUrls:[void 0,void 0,void 0,void 0]},u=[{value:"Performance",id:"performance",children:[],level:2},{value:"Stability",id:"stability",children:[],level:2},{value:"Maintenance",id:"maintenance",children:[],level:2},{value:"JS backend",id:"js-backend",children:[],level:2}],h={toc:u};function g(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Triweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"performance"},"Performance"),(0,i.kt)("p",null,"Sylvain: started adding support for branchless code generation in GHC's x86-64 native code generator\nfor STG case-expressions with two cheap and ok-for-speculation alternatives. See ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11315"},"GHC!11315"),".\nThis is promising as ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/9654#note_471280"},"previous work")," by Andreas showed that a ~10% performance\nimprovement was possible with an explicit conditional assignment primop and in our case the transformation would be automatic and would benefit even more programs.\nSadly for now there is still a subtle code generation issue: a GHC using the optimization to build test programs pass the testsuite, but a GHC itself built\nwith the optimization fails in some cases."),(0,i.kt)("h2",{id:"stability"},"Stability"),(0,i.kt)("p",null,"Josh: worked on a proof of concept for a GHC flag that can mark language features as experimental, with the goal to have an enforcable separation between\nfeatures that can change between releases, and those that are committed to longer deprecation cycles for breaking changes.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://mail.haskell.org/pipermail/ghc-steering-committee/2023-October/003489.html"},"GHC Steering Committee thread")),(0,i.kt)("h2",{id:"maintenance"},"Maintenance"),(0,i.kt)("p",null,"Sylvain: fixed Stack support for the upcoming GHC 9.8.1.\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/commercialhaskell/hi-file-parser/issues/16"},"hi-file-parser#16"),"\nand\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/commercialhaskell/hi-file-parser/pull/17"},"hi-file-parser#17")),(0,i.kt)("h2",{id:"js-backend"},"JS backend"),(0,i.kt)("p",null,"Sylvain: started investigating on how to add support for foreign libraries compiled with Emscripten (e.g. C libraries like sqlite) to the JS backend. Nothing to share yet though."),(0,i.kt)("p",null,"Josh: wrote documentation in the GHC users guide for getting started writing ",(0,i.kt)("inlineCode",{parentName:"p"},"jsbits")," - JavaScript files that supply functionality through the FFI. Typically, these replace\nC functions that are often used in Haskell for system calls, but are also used for performance reasons."),(0,i.kt)("p",null,"See: ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11291"},"GHC!11291")),(0,i.kt)("p",null,"Josh: added implementations for the C functions ",(0,i.kt)("inlineCode",{parentName:"p"},"realpath"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"rename"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"getcwd"),". These are used in building ",(0,i.kt)("inlineCode",{parentName:"p"},"ghcjs-dom"),", and also in some ",(0,i.kt)("inlineCode",{parentName:"p"},"Setup.hs")," Cabal setup scripts. This\npatch was backported to 9.8, so it will be in the upcoming release."),(0,i.kt)("p",null,"See:\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23806"},"GHC#23806"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11062"},"GHC!11062")),(0,i.kt)("p",null,"Luite: implemented support for ",(0,i.kt)("inlineCode",{parentName:"p"},"runInteractiveProcess")," with the JavaScript backend. This allows Cabal's ",(0,i.kt)("inlineCode",{parentName:"p"},"Setup")," program to work properly (cabal-install compiles ",(0,i.kt)("inlineCode",{parentName:"p"},"Setup.hs")," with the cross-compiler, hence the JS backend has to support them until Cabal is fixed to support two toolchains for host and target). See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/haskell/process/pull/292"},"process#292"),". This has been done a few weeks ago but was left out of previous reports."))}g.isMDXComponent=!0}}]);