"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[4086],{3905:function(e,t,n){n.d(t,{Zo:function(){return h},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},h=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,g=u["".concat(l,".").concat(d)]||u[d]||c[d]||i;return n?a.createElement(g,o(o({ref:t},h),{},{components:n})):a.createElement(g,o({ref:t},h))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6894:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},assets:function(){return h},toc:function(){return c},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],s={slug:"2023-02-23-ghc-update",title:"IOG GHC Update #4",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},l=void 0,p={permalink:"/2023-02-23-ghc-update",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2023-02-23-ghc-update-4.md",source:"@site/blog/2023-02-23-ghc-update-4.md",title:"IOG GHC Update #4",description:"Biweekly update from the GHC DevX team at IOG.",date:"2023-02-23T00:00:00.000Z",formattedDate:"February 23, 2023",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:2.935,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"},{name:"Joshua Meredith",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"josh"}],frontMatter:{slug:"2023-02-23-ghc-update",title:"IOG GHC Update #4",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},prevItem:{title:"IOG GHC Update #5",permalink:"/2023-03-09-ghc-update"},nextItem:{title:"IOG GHC Update #3 (2023-02-09)",permalink:"/2023-02-09-ghc-update"}},h={authorsImageUrls:[void 0,void 0,void 0,void 0]},c=[{value:"JavaScript backend",id:"javascript-backend",children:[{value:"Template Haskell",id:"template-haskell",children:[],level:3},{value:"JavaScript RTS refactor",id:"javascript-rts-refactor",children:[],level:3},{value:"Integer performance",id:"integer-performance",children:[],level:3},{value:"JavaScript EDSL",id:"javascript-edsl",children:[],level:3},{value:"CI",id:"ci",children:[],level:3}],level:2},{value:"Compiler performance",id:"compiler-performance",children:[{value:"More-strict <code>break</code>/<code>span</code>",id:"more-strict-breakspan",children:[],level:3},{value:"Unboxed CodeBuffers",id:"unboxed-codebuffers",children:[],level:3},{value:"Optimization Handbook",id:"optimization-handbook",children:[],level:3}],level:2},{value:"GHCi",id:"ghci",children:[],level:2}],u={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Biweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"javascript-backend"},"JavaScript backend"),(0,i.kt)("h3",{id:"template-haskell"},"Template Haskell"),(0,i.kt)("p",null,"Sylvain: ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/9779"},"!9779"),"\nadding TH support for the JS backend passes CI and is ready for reviews."),(0,i.kt)("p",null,"Ticket ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23013"},"#23013")," has been\nopened to keep track of an issue with the recompilation avoidance mechanism.\nFixing the issue seems to require some invasive refactoring that is best left\nfor a future merge request."),(0,i.kt)("p",null,"Luite: ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10008"},"!10008"),"\nImplemented keeping track of subdirectories in GHC's temporary file manager.\nReady for review. Fixes\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/22952"},"#22952"),"."),(0,i.kt)("p",null,"Temporary subdirectories are used when linking Template Haskell with the\nJavaScript backend and also in some situations when linking with other backends.\nThis would always result in files being left behind in GHC's temporary directory\n(and a warning at high enough verbosity settings) since these subdirectories\nwere never removed. With this patch, GHC keeps track of all created subdirectories\nand removes them at the end of the session."),(0,i.kt)("h3",{id:"javascript-rts-refactor"},"JavaScript RTS refactor"),(0,i.kt)("p",null,"Josh: has merged the refactor of the RTS generation module to reduce redundant code.\nIn this refactor, debug logging was also completed to determine the correct numbers\nto use as the cache sizes for generated JavaScript names - allowing us to vastly\nreduce the size of these arrays for efficiency, and to remove ",(0,i.kt)("inlineCode",{parentName:"p"},"panic")," cases in favour\nof generating higher numbered names without caching."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/9794"},"!9794")),(0,i.kt)("h3",{id:"integer-performance"},"Integer performance"),(0,i.kt)("p",null,"Sylvain: ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/9825"},"!9825")," has\nbeen updated after an helpful review by Matthew Claven."),(0,i.kt)("h3",{id:"javascript-edsl"},"JavaScript EDSL"),(0,i.kt)("p",null,"Jeff: MR is ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10000"},"open"),".\nIn response to feedback from the team Jeff has added (and removed)\nseveral features that distinguish the eDSL from\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ku-fpg/sunroof-compiler"},"sunroof"),". These include: removing\nthreading and continuations, adding named unique variables and a proper switch\nstatement. These changes allow more of the RTS to be replaced in the eDSL and\nallow the RTS to be typed using Haskell's type system. For example, now the STG\nregisters track the type of the values they hold."),(0,i.kt)("h3",{id:"ci"},"CI"),(0,i.kt)("p",null,"Sylvain: fixed CI script test that prevented performance results to be stored for\nthe JS backend (see ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/22923"},"#22923")," and\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10026"},"!10026"),")."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"compiler-performance"},"Compiler performance"),(0,i.kt)("h3",{id:"more-strict-breakspan"},"More-strict ",(0,i.kt)("inlineCode",{parentName:"h3"},"break"),"/",(0,i.kt)("inlineCode",{parentName:"h3"},"span")),(0,i.kt)("p",null,"Josh: opened a CLC (Core Libraries Committee) proposal to add stricter versions of\n",(0,i.kt)("inlineCode",{parentName:"p"},"break")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"span")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"Data.List")," in addition to the existing lazy versions. The\nproposal considers evidence that these versions are situationally more performant,\nby comparing allocation statistics, generated STG, and microbenchmarks - as well as\nmaking the argument for consistency with existing ",(0,i.kt)("inlineCode",{parentName:"p"},"List")," functions that also have\nstrict versions."),(0,i.kt)("p",null,"See also:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/haskell/core-libraries-committee/issues/133"},"CLC proposal 133")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/22865"},"GHC Issue 22865")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/9868"},"GHC MR 9868"))),(0,i.kt)("h3",{id:"unboxed-codebuffers"},"Unboxed CodeBuffers"),(0,i.kt)("p",null,"Josh: opened a CLC proposal to modify the implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"CodeBuffer"),"s in ",(0,i.kt)("inlineCode",{parentName:"p"},"base"),"\nto use unboxed tuples in the return type of encoding functions. This change presents\na significant allocation improvement, due to the difficulty GHC has with applying a\ncertain optimisation within data types."),(0,i.kt)("p",null,"See also:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/haskell/core-libraries-committee/issues/134"},"CLC proposal 134")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/22946"},"GHC Issue 22946")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/9948"},"GHC MR 9948"),".")),(0,i.kt)("h3",{id:"optimization-handbook"},"Optimization Handbook"),(0,i.kt)("p",null,"Jeff: Has been hard at work on the ",(0,i.kt)("a",{parentName:"p",href:"https://input-output-hk.github.io/hs-opt-handbook.github.io/"},"Optimization Handbook"),".\nHe has finished a\nchapter on ",(0,i.kt)("inlineCode",{parentName:"p"},"Lambda Lifting"),", significantly expanded the glossary, and added\ndocumentation to the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/yongrenjie/sphinx-exec-directive"},"sphinx-exec-directive"),"\nhaskell extension that he finished last month. The optimization handbook is now\nin review by IOG's IT team to migrate it to the Haskell Foundation website."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"ghci"},"GHCi"),(0,i.kt)("p",null,"Luite: Added a testcase and did some cleanups in the types of the C code in MR\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/9957"},"!9957"),", and adjusted\nthe bytecode generator to not produce zero offset ",(0,i.kt)("inlineCode",{parentName:"p"},"SLIDE")," instructions anymore.\nThis is now ready for review."))}d.isMDXComponent=!0}}]);