"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[9050],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return g}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),g=a,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||i;return r?n.createElement(m,o(o({ref:t},u),{},{components:r})):n.createElement(m,o({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1951:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},assets:function(){return u},toc:function(){return p},default:function(){return g}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],l={slug:"2023-01-24-javascript-browser-tutorial",title:"Using GHC's JavaScript Backend in the Browser",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","javascript","cross-compilation"]},s="Using GHC's JavaScript Backend in the Browser",c={permalink:"/2023-01-24-javascript-browser-tutorial",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2023-01-24-javascript-browser-tutorial.md",source:"@site/blog/2023-01-24-javascript-browser-tutorial.md",title:"Using GHC's JavaScript Backend in the Browser",description:"In a previous",date:"2023-01-24T00:00:00.000Z",formattedDate:"January 24, 2023",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"javascript",permalink:"/tags/javascript"},{label:"cross-compilation",permalink:"/tags/cross-compilation"}],readingTime:8.12,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"},{name:"Joshua Meredith",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"josh"}],frontMatter:{slug:"2023-01-24-javascript-browser-tutorial",title:"Using GHC's JavaScript Backend in the Browser",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","javascript","cross-compilation"]},prevItem:{title:"One step forward, an easier interoperability between Rust and Haskell",permalink:"/2023-01-26-hs-bindgen-introduction"},nextItem:{title:"GHC DevX Update 2023-01-12",permalink:"/2023-01-12-ghc-update"}},u={authorsImageUrls:[void 0,void 0,void 0,void 0]},p=[],d={toc:p};function g(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In a previous\n",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/2022-12-13-ghc-js-backend-merged"},"post")," we\nintroduced GHC's new JavaScript backend, which allows the compilation of Haskell\ncode into JavaScript. This is the first tutorial in a new series about the\nJavaScript backend. In this post, we'll build GHC as\na JavaScript cross-compiler and run a trivial Haskell program in the browser."),(0,i.kt)("p",null,'We plan to write more of those blog post in the coming weeks and\nmonths as we add new features (e.g. support for "foreign exports" that will\nallow JavaScript code to call into Haskell code, support for Template Haskell,\netc.). For now it relies on our "insider" knowledge (e.g. how the FFI works)\nthat isn\'t well documented elsewhere. We do plan to add a chapter about the\nJavaScript backend in GHC\'s user guide, but for now your best chance is to look\nat GHCJS\'s documentation or at the source code.'),(0,i.kt)("p",null,"Please note: this is a technology preview of the in-development JavaScript backend\nfor GHC. Not all Haskell features are implemented, and bugs are expected. It is\ncurrently rather complicated for JavaScript code to call into Haskell code (\"foreign\nexports\" aren't implemented). GHC isn't a multi-target compiler yet, so a GHC executable\nbuilt for a native platform (Linux/x86-64, Windows/x86-64, Darwin/AArch64...) as currently distributed (via ghcup, Stack, binary distributions, etc.) won't be able to produce JavaScript. Official prebuilt binary distributions are likely to remain\nunavailable until GHC gains multi-target support - requiring the JavaScript backend\nto be built from source even after the backend matures.\nThat's why we start this post with the required steps to build yourself\na GHC compiler capable of producing JavaScript."))}g.isMDXComponent=!0}}]);