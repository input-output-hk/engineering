"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[5141],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=c(n),g=a,d=h["".concat(s,".").concat(g)]||h[g]||u[g]||i;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3963:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},assets:function(){return p},toc:function(){return u},default:function(){return g}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={slug:"2024-07-24-ghc-update",title:"IOG GHC Update #32",authors:["sylvain","doyougnu","luite"],tags:["ghc","ghc-update"]},s=void 0,c={permalink:"/2024-07-24-ghc-update",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2024-07-24-ghc-update-32.md",source:"@site/blog/2024-07-24-ghc-update-32.md",title:"IOG GHC Update #32",description:"Triweekly update from the GHC DevX team at IOG.",date:"2024-07-24T00:00:00.000Z",formattedDate:"July 24, 2024",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:1.305,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"}],frontMatter:{slug:"2024-07-24-ghc-update",title:"IOG GHC Update #32",authors:["sylvain","doyougnu","luite"],tags:["ghc","ghc-update"]},nextItem:{title:"IOG GHC Update #31",permalink:"/2024-07-08-ghc-update"}},p={authorsImageUrls:[void 0,void 0,void 0]},u=[{value:"High-level Summary",id:"high-level-summary",children:[],level:2},{value:"Details",id:"details",children:[],level:2}],h={toc:u};function g(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Triweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"high-level-summary"},"High-level Summary"),(0,i.kt)("p",null,"The team is working on characterizing and upstreaming some GHC patches that are only present in haskell.nix-provided GHCs. The process isn't straightforward as some patches are too controversial to be upstreamed and some other need to be modified to be acceptable upstream (adding CPP for architecture independance, fixing documentation, etc.)."),(0,i.kt)("p",null,"The team is also helping update cardano-addresses to GHC JS backend (see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/IntersectMBO/cardano-addresses/pull/267"},"https://github.com/IntersectMBO/cardano-addresses/pull/267"),") and making progresses in upstreaming a new profiling method that we used to debug a performance regression in cardano-ledger."),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("p",null,"Sylvain: fixed RTS linker on AArch64 to use the M32 allocator to avoid an excessive amount of calls to ",(0,i.kt)("inlineCode",{parentName:"p"},"mmap")," and fragmentation. See ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/24432"},"GHC#24432")," and ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/12914"},"GHC!12914"),". This was done in the process to update patches from haskell.nix to GHC upstream. This patch however is different from its haskell.nix counterpart which introduces a new allocator memory pool based allocator with different tradeoffs."),(0,i.kt)("p",null,"Sylvain: helped with debugging of performance issue in ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25055"},"GHC#25055"),", which was fixed by Simon PJ in ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13038"},"GHC!13038"),".\nIn the process I've found another unrelated bug ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25096"},"GHC#25096")," being fixed by Simon in ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13060"},"GHC!13060"),". Sadly the former bug doesn't explain the cardano-ledger performance regression we were investigating a few weeks ago. We'll check if the second one explains it when it will be fixed."),(0,i.kt)("p",null,"Luite: Worked on dynamic allocation of cost centre stacks to allow breaking down time and allocation profiles in more flexible ways. See ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25098"},"GHC#25098"),"."),(0,i.kt)("p",null,"Jeff: haskell.nix patches triage and branch creation in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/stable-haskell/ghc/"},"https://github.com/stable-haskell/ghc/")," repository"))}g.isMDXComponent=!0}}]);