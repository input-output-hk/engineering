"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[4670],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=p(n),u=a,d=g["".concat(s,".").concat(u)]||g[u]||h[u]||i;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2027:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return c},toc:function(){return h},default:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={slug:"2023-10-26-ghc-update",title:"IOG GHC Update #19",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},s=void 0,p={permalink:"/2023-10-26-ghc-update",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2023-10-26-ghc-update-19.md",source:"@site/blog/2023-10-26-ghc-update-19.md",title:"IOG GHC Update #19",description:"Triweekly update from the GHC DevX team at IOG.",date:"2023-10-26T00:00:00.000Z",formattedDate:"October 26, 2023",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:1.335,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"},{name:"Joshua Meredith",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"josh"}],frontMatter:{slug:"2023-10-26-ghc-update",title:"IOG GHC Update #19",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},prevItem:{title:"IOG GHC Update #20",permalink:"/2023-11-16-ghc-update"},nextItem:{title:"Internship in GHC at IOG",permalink:"/2023-10-25-internship"}},c={authorsImageUrls:[void 0,void 0,void 0,void 0]},h=[{value:"Stability",id:"stability",children:[],level:2},{value:"Maintenance",id:"maintenance",children:[],level:2},{value:"JS backend",id:"js-backend",children:[],level:2}],g={toc:h};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Triweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"stability"},"Stability"),(0,i.kt)("p",null,"We've published Bartek's blog post about his internship at IOG on GHC stability features: ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/2023-10-25-internship"},"https://engineering.iog.io/2023-10-25-internship")),(0,i.kt)("h2",{id:"maintenance"},"Maintenance"),(0,i.kt)("p",null,"Sylvain: fixed out-of-bounds array access bug in ",(0,i.kt)("inlineCode",{parentName:"p"},"ghc-bignum"),".\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/24066"},"GHC#24066"),"\nand ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11412"},"GHC!11412"),"."),(0,i.kt)("p",null,"Sylvain: got access to a big-endian PowerPC architectures on the ",(0,i.kt)("a",{parentName:"p",href:"https://portal.cfarm.net/"},"GCC Compile\nFarm")," and started debugging endianness-related ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/?label_name%5B%5D=big-endian"},"GHC bugs"),".\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/18431"},"GHC#18431"),", ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23387"},"GHC#23387"),", ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11473"},"GHC!11473"),"."),(0,i.kt)("h2",{id:"js-backend"},"JS backend"),(0,i.kt)("p",null,"Sylvain: worked on improving support for C sources with the JS backend\n(e.g. to link with ",(0,i.kt)("inlineCode",{parentName:"p"},"sqlite")," compiled to JavaScript/Wasm with Emscripten).\nThe work is still in progress and you can follow progresses in\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11502"},"GHC!11502"),".\nSee also related refactoring merge requests ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11437"},"GHC!11437"),"\nand ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11504"},"GHC!11504"),"."),(0,i.kt)("p",null,"Josh: merged documentation on replacing C FFI functions in libraries for the JS backend.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11291"},"GHC!11291")),(0,i.kt)("p",null,"Josh: added a ticket with a task list of C functions used in boot libraries that\nneed to be replaced for the JS backend.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/24015"},"GHC#24015")),(0,i.kt)("p",null,"Jeff: Finished ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/22736"},"splitting")," the JS Backend IR, ",(0,i.kt)("inlineCode",{parentName:"p"},"JStat"),", into two: ",(0,i.kt)("inlineCode",{parentName:"p"},"JStg")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"JStat"),". This substantially cleans up the JS backend's DSL and makes it harder to write unsafe code in the DSL. More importantly this patch paves the way for the optimizer and for a more robust typed eDSL to express the JS Backend's runtime system in. See ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10722"},"GHC!10722")," for more."),(0,i.kt)("p",null,'Luite: Worked on bringing back an optimizer for the JS backend. The goal is\nto reduce code size and memory consumption during linking. An initial version\nreduced code size of a "hello world" program by 26.9%, and additional analysis\nshould improve this more. See ',(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11507"},"GHC!11507")))}u.isMDXComponent=!0}}]);