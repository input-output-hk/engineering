"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[159],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return h}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),g=u(r),h=a,m=g["".concat(s,".").concat(h)]||g[h]||c[h]||i;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},184:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},assets:function(){return p},toc:function(){return c},default:function(){return h}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),l=["components"],o={slug:"2024-05-23-ghc-update",title:"IOG GHC Update #29",authors:["sylvain","doyougnu","luite"],tags:["ghc","ghc-update"]},s=void 0,u={permalink:"/2024-05-23-ghc-update",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2024-05-23-ghc-update-29.md",source:"@site/blog/2024-05-23-ghc-update-29.md",title:"IOG GHC Update #29",description:"Triweekly update from the GHC DevX team at IOG.",date:"2024-05-23T00:00:00.000Z",formattedDate:"May 23, 2024",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:.89,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"}],frontMatter:{slug:"2024-05-23-ghc-update",title:"IOG GHC Update #29",authors:["sylvain","doyougnu","luite"],tags:["ghc","ghc-update"]},prevItem:{title:"IOG GHC Update #30",permalink:"/2024-06-17-ghc-update"},nextItem:{title:"IOG GHC Update #28",permalink:"/2024-05-02-ghc-update"}},p={authorsImageUrls:[void 0,void 0,void 0]},c=[{value:"High-level Summmary",id:"high-level-summmary",children:[],level:2},{value:"Details",id:"details",children:[],level:2}],g={toc:c};function h(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Triweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"high-level-summmary"},"High-level Summmary"),(0,i.kt)("p",null,"Sprint focused on general maintenance of GHC (reviews, issue triage, etc.) and progress on opened merge requests.\nNext sprint the team will be attending the Haskell Foundation Workshop, Zurihac, and IOG meetup. We hope to meet you at Zurihac!"),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("p",null,"Jeff: Finished lowering bitcast primops into the native code generators and the wasm backend. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/12233"},"GHC!12333")," GHC now generates slightly smarter assembly in these cases."),(0,i.kt)("p",null,"Sylvain: fixed support for the ",(0,i.kt)("inlineCode",{parentName:"p"},"HexFloatLiterals")," extension with unboxed literals. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/22155"},"GHC#22155")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/12657"},"GHC!12657")),(0,i.kt)("p",null,"Sylvain: fixed a call to ",(0,i.kt)("inlineCode",{parentName:"p"},"stgCallocBytes")," triggering a new warning with recent GCCs. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/24828"},"GHC#24828")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/12655"},"GHC!12655")),(0,i.kt)("p",null,"Sylvain: reduced allocations in JS code generator due to a mistake. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/24746"},"GHC#24746")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/12631"},"GHC!12631")),(0,i.kt)("p",null,"Luite: Worked on a build issue related to libffi ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/24864"},"GHC#24864")),(0,i.kt)("p",null,"Luite: Worked on per-thread control of profiling counters for cost centre stack profiling. This may add a new STG register similar to this proof of concept ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/luite/ghc/-/tree/prof-status-register?ref_type=heads"},"luite/ghc/prof-status-register")),(0,i.kt)("p",null,"Jeff: Repaired tests in the testsuite that track size of the RTS object file. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/12605"},"GHC!12605")))}h.isMDXComponent=!0}}]);