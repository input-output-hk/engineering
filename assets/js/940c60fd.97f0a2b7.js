"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[68],{3905:function(e,t,a){a.d(t,{Zo:function(){return h},kt:function(){return u}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},h=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,h=o(e,["components","mdxType","originalType","parentName"]),c=p(a),u=n,d=c["".concat(s,".").concat(u)]||c[u]||g[u]||i;return a?r.createElement(d,l(l({ref:t},h),{},{components:a})):r.createElement(d,l({ref:t},h))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return h},toc:function(){return g},default:function(){return u}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),l=["components"],o={slug:"2024-09-26-ghc-update",title:"IOG GHC Update #35",authors:["sylvain","doyougnu","luite"],tags:["ghc","ghc-update"]},s=void 0,p={permalink:"/2024-09-26-ghc-update",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2024-09-26-ghc-update-35.md",source:"@site/blog/2024-09-26-ghc-update-35.md",title:"IOG GHC Update #35",description:"Triweekly update from the GHC DevX team at IOG.",date:"2024-09-26T00:00:00.000Z",formattedDate:"September 26, 2024",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:2.44,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"}],frontMatter:{slug:"2024-09-26-ghc-update",title:"IOG GHC Update #35",authors:["sylvain","doyougnu","luite"],tags:["ghc","ghc-update"]},nextItem:{title:"IOG GHC Update #34",permalink:"/2024-09-05-ghc-update"}},h={authorsImageUrls:[void 0,void 0,void 0]},g=[{value:"High-level Summary",id:"high-level-summary",children:[],level:2},{value:"Details",id:"details",children:[{value:"Cardano performance",id:"cardano-performance",children:[],level:3},{value:"Parser",id:"parser",children:[],level:3},{value:"Code generation",id:"code-generation",children:[],level:3},{value:"RTS linker",id:"rts-linker",children:[],level:3},{value:"RTS IO and Event managers",id:"rts-io-and-event-managers",children:[],level:3},{value:"JavaScript backend",id:"javascript-backend",children:[],level:3}],level:2}],c={toc:g};function u(e){var t=e.components,a=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Triweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"high-level-summary"},"High-level Summary"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Luite found the precise GHC commit introducing the performance regression in ",(0,i.kt)("inlineCode",{parentName:"p"},"cardano-node"),". This was the reason why we were stuck with GHC 8.10. A fix has been provided in haskell.nix and, if performance tests are positive that the regression is gone, it should finally be possible to upgrade to a more recent GHC!")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Sylvain fixed a bug on FreeBSD. Once backported to GHC 9.{6,8,10}, ",(0,i.kt)("inlineCode",{parentName:"p"},"ghcup")," ",(0,i.kt)("a",{parentName:"p",href:"https://discourse.haskell.org/t/priorities-for-upcoming-ghc-releases/9605/18"},"might start recommending GHC 9.6")," or even a newer GHC release. Sylvain also did some triage on GHC's bug tracker, leading to several smallish patches in addition to the more substantive ones (see details below).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Jeff finished the ",(0,i.kt)("a",{parentName:"p",href:"https://haskell.foundation/hs-opt-handbook.github.io/"},"Memory Footprints of Data Types")," chapter in the Haskell Optimization Handbook. Added a new RTS flag in a Haskell.nix patch migration and worked on refactoring the code generator to use an ",(0,i.kt)("inlineCode",{parentName:"p"},"OrdList")," instead of a list."))),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("h3",{id:"cardano-performance"},"Cardano performance"),(0,i.kt)("p",null,"Luite: spent some time bisecting to find out why ",(0,i.kt)("inlineCode",{parentName:"p"},"cardano-node")," is slower with recent GHC. It turned out to be speculative evaluation having a detrimental effect on allocations. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25284"},"GHC#25284")),(0,i.kt)("h3",{id:"parser"},"Parser"),(0,i.kt)("p",null,"Sylvain: fixed parsing of extended literals that was too permissive (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"80#Int3")," would be lexed as two tokens ",(0,i.kt)("inlineCode",{parentName:"p"},"80#Int")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"3"),"). ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25258"},"GHC#25258")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13272"},"GHC!13272")),(0,i.kt)("h3",{id:"code-generation"},"Code generation"),(0,i.kt)("p",null,"Sylvain: fixed GHC build with ",(0,i.kt)("inlineCode",{parentName:"p"},"-dppr-debug")," enabled (useful for debugging). ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25255"},"GHC#25255")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13260"},"GHC!13260")),(0,i.kt)("p",null,"Sylvain: fixed generation of a static closure for a datacon with an unboxed sum field (e.g. an unpacked sum type). ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25166"},"GHC#25166")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13146"},"GHC!13146")),(0,i.kt)("p",null,'Sylvain: added missing "absorb rules" in Core for binary and/or operations. ',(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/16351"},"GHC#16351")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13273"},"GHC!13273")),(0,i.kt)("p",null,"Sylvain: improved deriving of ",(0,i.kt)("inlineCode",{parentName:"p"},"Enum")," instances by reusing more code for error cases and by using a single unsigned comparison instead of two signed ones to check for out-of-bound errors. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/16364"},"GHC#16364")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13266"},"GHC!13266")),(0,i.kt)("p",null,"Jeff: Refactored the Code Generator to use an ",(0,i.kt)("inlineCode",{parentName:"p"},"OrdList")," rather than a list. This slightly un-pessimizes the code generator's implementation by removing a lot of superfluous ",(0,i.kt)("inlineCode",{parentName:"p"},"Data.List.reverse")," but is still a work in progess. See ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/19910"},"GHC#19910"),"."),(0,i.kt)("h3",{id:"rts-linker"},"RTS linker"),(0,i.kt)("p",null,"Sylvain, Jeff: upstreamed the haskell.nix patch adding some support for ELF hidden symbols in the RTS linker ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25191"},"GHC#25191")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13013"},"GHC!13013")),(0,i.kt)("p",null,"Sylvain: upstreamed an adaptation of the haskell.nix patch adding support for additional RTS linker symbols. This is particularly useful for cross-compilation. See the added documentation in the patch. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25155"},"GHC#25155")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13129"},"GHC!13129")),(0,i.kt)("p",null,"Sylvain: upstreamed an haskell.nix patch fixing support for the RTS ",(0,i.kt)("inlineCode",{parentName:"p"},"closure_sizeW_")," with the RTS linker. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25252"},"GHC#25252")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13249"},"GHC!13249")),(0,i.kt)("h3",{id:"rts-io-and-event-managers"},"RTS IO and Event managers"),(0,i.kt)("p",null,"Sylvain: fixed file descriptor closing for the ",(0,i.kt)("inlineCode",{parentName:"p"},"timerfd"),"-based ticker after a fork. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25280"},"GHC#25280")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13279"},"GHC!13279")),(0,i.kt)("p",null,"Sylvain: fixed the invalid closing of a ",(0,i.kt)("inlineCode",{parentName:"p"},"kqueue")," file descriptor after a fork leading to crashes on FreeBSD. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/24672"},"GHC#24672")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13276"},"GHC!13276")),(0,i.kt)("h3",{id:"javascript-backend"},"JavaScript backend"),(0,i.kt)("p",null,"Sylvain: fixed the build system to avoid trying to use ",(0,i.kt)("inlineCode",{parentName:"p"},"libffi")," with the JS backend for adjustors. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25159"},"GHC#25159")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13224"},"GHC!13224")),(0,i.kt)("p",null,"Sylvain: fixed a helper used to interact with C code compiler to WebAssembly from JavaScript. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/25288"},"GHC#25288")," ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/13303"},"GHC!13303")))}u.isMDXComponent=!0}}]);