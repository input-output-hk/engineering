"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[4408],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=p(n),g=a,m=h["".concat(s,".").concat(g)]||h[g]||c[g]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},962:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return u},toc:function(){return c},default:function(){return g}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={slug:"2023-12-07-ghc-update",title:"IOG GHC Update #21",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},s=void 0,p={permalink:"/2023-12-07-ghc-update",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2023-12-07-ghc-update-21.md",source:"@site/blog/2023-12-07-ghc-update-21.md",title:"IOG GHC Update #21",description:"Triweekly update from the GHC DevX team at IOG.",date:"2023-12-07T00:00:00.000Z",formattedDate:"December 7, 2023",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:1.185,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"},{name:"Joshua Meredith",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"josh"}],frontMatter:{slug:"2023-12-07-ghc-update",title:"IOG GHC Update #21",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},prevItem:{title:"IOG GHC Update #22",permalink:"/2024-01-04-ghc-update"},nextItem:{title:"IOG GHC Update #20",permalink:"/2023-11-16-ghc-update"}},u={authorsImageUrls:[void 0,void 0,void 0,void 0]},c=[{value:"Performance",id:"performance",children:[],level:2},{value:"Maintenance",id:"maintenance",children:[],level:2}],h={toc:c};function g(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Triweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"performance"},"Performance"),(0,i.kt)("p",null,"Josh: worked on a tool to benchmark various configurations of tools in the Haskell ecosystem.\nThis tool is intented to track performance changes over time - originally motivated by a\nregression experienced by another team at IOG between GHC versions 8.10 and and 9.2. When\ncompleted, this tool will automatically run all permutations of the inputs and graph the results."),(0,i.kt)("p",null,"Sylvain: investigated and closed ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/21041"},"GHC#21041")," as the suggested change doesn't improve performance"),(0,i.kt)("p",null,"Jeff: Helped the cardano team with performance engineering the cardano-ledger. Tested two prospective patches and observed good evidence that one patch is worthy of further testing. "),(0,i.kt)("p",null,"Luite: Reimplemented the Z-encoder in Haskell and C for a 10-20x speedup over the\nexisting implementation. This allows us to remove the cached Z-encoded strings from the\nFastString table, reducing the amount of non-reclaimable memory used in a GHC\nsession ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11681"},"GHC!11681")),(0,i.kt)("h2",{id:"maintenance"},"Maintenance"),(0,i.kt)("p",null,"Sylvain: closed most\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/groups/ghc/-/issues/?label_name%5B%5D=Data%20Parallel%20Haskell"},"tickets"),"\nrelated to Data Parallel Haskell (DPH) and that are no longer relevant."),(0,i.kt)("p",null,"Sylvain: fixed issue with STG CSE optimization ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/14895"},"GHC#14895"),",\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/24233"},"GHC#24233"),", ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11715"},"GHC!11715"),"."),(0,i.kt)("p",null,"Sylvain: implemented ",(0,i.kt)("inlineCode",{parentName:"p"},"text"),"'s ",(0,i.kt)("inlineCode",{parentName:"p"},"measure_off")," function in pure Haskell ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/haskell/text/pull/548"},"text!548")),(0,i.kt)("p",null,"Sylvain: investigated and closed ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/15485"},"GHC#15485"),". The upstream ",(0,i.kt)("inlineCode",{parentName:"p"},"unix")," issue is now tracked in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/haskell/unix/issues/310"},"unix#310"),"."),(0,i.kt)("p",null,"Luite: fixed some foreign imports for the JS backend ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11447"},"GHC!11447")),(0,i.kt)("p",null,"Jeff: Modified the testsuite to track and record arbitrary metrics on bulid artifacts. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11551"},"MR!11551")," is 90% done."))}g.isMDXComponent=!0}}]);