"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[8753],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),h=p(a),m=n,g=h["".concat(s,".").concat(m)]||h[m]||u[m]||i;return a?r.createElement(g,l(l({ref:t},c),{},{components:a})):r.createElement(g,l({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},623:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return c},toc:function(){return u},default:function(){return m}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),l=["components"],o={slug:"2023-07-13-ghc-update",title:"IOG GHC Update #14",authors:["sylvain","doyougnu","luite","josh","bartek"],tags:["ghc","ghc-update"]},s=void 0,p={permalink:"/2023-07-13-ghc-update",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2023-07-13-ghc-update-14.md",source:"@site/blog/2023-07-13-ghc-update-14.md",title:"IOG GHC Update #14",description:"Biweekly update from the GHC DevX team at IOG.",date:"2023-07-13T00:00:00.000Z",formattedDate:"July 13, 2023",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:3.045,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"},{name:"Joshua Meredith",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"josh"},{name:"Bart\u0142omiej Cie\u015blar",title:"Haskell DevX Intern @ IOG",email:"bartlomiej.cieslar@iohk.io",key:"bartek"}],frontMatter:{slug:"2023-07-13-ghc-update",title:"IOG GHC Update #14",authors:["sylvain","doyougnu","luite","josh","bartek"],tags:["ghc","ghc-update"]},nextItem:{title:"IOG GHC Update #13",permalink:"/2023-06-29-ghc-update"}},c={authorsImageUrls:[void 0,void 0,void 0,void 0,void 0]},u=[{value:"JavaScript backend",id:"javascript-backend",children:[],level:2},{value:"Incomplete Record Selectors",id:"incomplete-record-selectors",children:[],level:2},{value:"Deprecated Instances",id:"deprecated-instances",children:[],level:2},{value:"Miscellaneous",id:"miscellaneous",children:[],level:2}],h={toc:u};function m(e){var t=e.components,a=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Biweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"javascript-backend"},"JavaScript backend"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Sylvain: helped fixing support for cross-compilers in GHCup: compilation and installation of a cross-compiler from source and from bindists. Most of the work was done by Julian (GHCup's maintainer). See ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/haskell/ghcup-hs/pull/844"},"GHCup#844"),", ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/haskell/ghcup-hs/issues/838"},"GHCup#838"),", ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/haskell/ghcup-hs/pull/845"},"GHCup#845"),". JS backend support in GHCup can be tested via pre-release channels following instructions in ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/haskell/ghcup-metadata/pull/98#issuecomment-1632214888"},"https://github.com/haskell/ghcup-metadata/pull/98#issuecomment-1632214888"),".")),(0,i.kt)("p",null,"Note that all GHC compilers (including JavaScript and Windows cross-compilers) can be easily used from the Nix environments we provide: see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/devx#compilers-and-flavours"},"https://github.com/input-output-hk/devx#compilers-and-flavours")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Sylvain: implemented support for ",(0,i.kt)("inlineCode",{parentName:"p"},"rmdir")," and fixed some issues with ",(0,i.kt)("inlineCode",{parentName:"p"},"lstat"),". ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10803"},"GHC!10803"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Sylvain: refactored and cleaned up the code responsible for converting Haskell types into their JavaScript representation. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10806"},"GHC!10806")," and ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23314"},"GHC#23314"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Sylvain: fixed a bug in the JS linker that was assuming that the unit-id of a program was always ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),". This is no longer true to support multiple home-units. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23613"},"GHC#23613")," and ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10819"},"GHC!10819"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Sylvain: fixed support for utimes/futimes/lutimes in ",(0,i.kt)("inlineCode",{parentName:"p"},"unix")," library to support ",(0,i.kt)("inlineCode",{parentName:"p"},"touchFd")," on JavaScript target (to fix Ben's ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/9237"},"GHC!9237"),"). Not yet merged because it lacks CI (this triggered the work on fixing ghcup). ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/haskell/unix/pull/285"},"Unix#285"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Jeff: Re-enabled the CI perf tests for the JS Backend. These were accidentally disabled because in Josh fixed a bug in the testsuite that treated the JavaScript backend as a Stage1 compiler, which it is. But Stage1 compilers are built with assertions and thus the testsuite does not track performance metrics. The ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10820"},"fix")," changes the JavaScript backend CI to add a debug job and a release job which tracks the performance metrics.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Luite: Looked into some file access failures that caused the JavaScript CI pipeline to fail and found a related issue of platform compatibility, because of mode flags in the ",(0,i.kt)("inlineCode",{parentName:"p"},"stat")," struct. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23651"},"GHC#23651"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Luite: Looked into CI breakage and found that ",(0,i.kt)("inlineCode",{parentName:"p"},"emsdk")," 3.1.42 has some changes in data layout relative to 3.1.41. In particular changes in the ",(0,i.kt)("inlineCode",{parentName:"p"},"stat")," struct were causing file operations to fail. CI is fixed now by pinning it to 3.1.40, but work is still ongoing to make sure that we can handle a wider ",(0,i.kt)("inlineCode",{parentName:"p"},"emsdk")," version range and to test for a compatible version at installation time. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23649"},"GHC#23649"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Josh: fixed an issue where ",(0,i.kt)("inlineCode",{parentName:"p"},"toJSString")," didn't support unicode code points that take up more than one UTF-16 value (i.e. values greater than 2^16).\nSee:\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23628"},"GHC#23628"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10838"},"GHC!10838"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Josh: fixed an issue where ",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),"s in ",(0,i.kt)("inlineCode",{parentName:"p"},"ghcjs-base")," were producing incorrect results. This was a result of changes between GHCJS and the JavaScript backend:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Addr#")," is now a pair of ",(0,i.kt)("inlineCode",{parentName:"li"},"(pointer, offset)")," and is passed as function arguments"),(0,i.kt)("li",{parentName:"ul"},"A value was being returned as a ",(0,i.kt)("inlineCode",{parentName:"li"},"MK_TUP2"),", which is a JavaScript macro that expands to apply the Haskell ",(0,i.kt)("inlineCode",{parentName:"li"},"(,)")," constructor. This is no longer supported in the JavaScript backend, in favour of ",(0,i.kt)("inlineCode",{parentName:"li"},"RETURN_UBX_TUP2"),", which is another macro that returns multiple values in an unboxed way through the JavaScript RTS."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Josh: added a wiki page to track the support of the JavaScript backend for various libraries. ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/wikis/State-of-the-JavaScript-Ecosystem"},"GHC Wiki")))),(0,i.kt)("h2",{id:"incomplete-record-selectors"},"Incomplete Record Selectors"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Bartek: The Incomplete Record Selectors MR is now ready to be merged,\nSee ",(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10736"},"GHC!10736"))),(0,i.kt)("h2",{id:"deprecated-instances"},"Deprecated Instances"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Bartek: A lot of the major work done for the Deprecated Instances, will soon be creating a MR for it"),(0,i.kt)("li",{parentName:"ul"},"Bartek: Some investigation of how interface tidying can potentially affect this proposal and the ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/ghc-proposals/ghc-proposals/blob/master/proposals/0134-deprecating-exports-proposal.rst"},"Deprecated Exports proposal"),", See ",(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10844"},"GHC!10844"))),(0,i.kt)("h2",{id:"miscellaneous"},"Miscellaneous"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Jeff: Continued ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10395"},"work")," on adding Haskell Error Index links to GHC's error messages. Almost done, only windows is failing on CI.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Bartek: Work on several reported bugs is moving forward,\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23569"},"GHC#23569"),",\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23546"},"GHC#23546"),",\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23520"},"GHC#23520"),",\nand ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23279"},"GHC#23279")))))}m.isMDXComponent=!0}}]);