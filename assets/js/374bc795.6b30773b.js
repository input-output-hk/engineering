"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[3495],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,g=c["".concat(s,".").concat(d)]||c[d]||h[d]||i;return a?n.createElement(g,l(l({ref:t},u),{},{components:a})):n.createElement(g,l({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},999:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return u},toc:function(){return h},default:function(){return d}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),l=["components"],o={slug:"2023-05-04-ghc-update",title:"IOG GHC Update #9",authors:["sylvain","doyougnu","luite","josh","bartek"],tags:["ghc","ghc-update"]},s=void 0,p={permalink:"/2023-05-04-ghc-update",source:"@site/blog/2023-05-04-ghc-update-9.md",title:"IOG GHC Update #9",description:"Biweekly update from the GHC DevX team at IOG.",date:"2023-05-04T00:00:00.000Z",formattedDate:"May 4, 2023",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:1.865,truncated:!1,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"},{name:"Joshua Meredith",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"josh"},{name:"Bart\u0142omiej Cie\u015blar",title:"Haskell DevX Intern @ IOG",email:"bartlomiej.cieslar@iohk.io",key:"bartek"}],frontMatter:{slug:"2023-05-04-ghc-update",title:"IOG GHC Update #9",authors:["sylvain","doyougnu","luite","josh","bartek"],tags:["ghc","ghc-update"]},nextItem:{title:"Stacks in the JavaScript Backend",permalink:"/2023-04-21-stacks-in-the-js-backend"}},u={authorsImageUrls:[void 0,void 0,void 0,void 0,void 0]},h=[{value:"JavaScript backend",id:"javascript-backend",children:[],level:2},{value:"GHC Proposal #0134 (Deprecated Exports)",id:"ghc-proposal-0134-deprecated-exports",children:[],level:2},{value:"Performance",id:"performance",children:[],level:2},{value:"Modularity",id:"modularity",children:[],level:2},{value:"Tooling",id:"tooling",children:[],level:2}],c={toc:h};function d(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Biweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"javascript-backend"},"JavaScript backend"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Luite: has published a blog post about how Stacks work in the JS backend:\n",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/2023-04-21-stacks-in-the-js-backend"},"https://engineering.iog.io/2023-04-21-stacks-in-the-js-backend"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Jeff: ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10260"},"GHC!10260"),", which adds a small optimizer to the JS backend, has landed in master.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Josh & Sylvain: fixed the ",(0,i.kt)("inlineCode",{parentName:"p"},"-fcheck-prim-bound")," feature for the JS backend.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23123"},"GHC#23123")," and\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10234"},"GHC!10234"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Luite: improved gc pause times for the JS backend for programs that do not\nuse weak references, by omitting heap scans if there are no pending finalizers.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10379"},"GHC!10379")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Josh: refactored some code related to saturated/unsaturated ASTs:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"First, the ",(0,i.kt)("inlineCode",{parentName:"li"},"identsS"),"/",(0,i.kt)("inlineCode",{parentName:"li"},"identsE"),"/",(0,i.kt)("inlineCode",{parentName:"li"},"identsV")," functions were changed to\ntake a ",(0,i.kt)("inlineCode",{parentName:"li"},"Sat.JStat")," instead of an ",(0,i.kt)("inlineCode",{parentName:"li"},"Unsat.JStat")," as an argument, since\nthey previously would raise an error when encountering an unsaturated\nconstructor (",(0,i.kt)("inlineCode",{parentName:"li"},"Sat.JStat")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"Unsat.JStat")," are identical other than\nthis constructor)\n",(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23304"},"GHC#23304"),(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10348"},"GHC!10348")),(0,i.kt)("li",{parentName:"ul"},"Then, ",(0,i.kt)("inlineCode",{parentName:"li"},"jsSaturate")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"satJStat")," were combined into one function.\nPreviously, ",(0,i.kt)("inlineCode",{parentName:"li"},"jsSaturate")," would instantiate unsaturated constructors\nin a ",(0,i.kt)("inlineCode",{parentName:"li"},"JStat")," AST, but retain the ",(0,i.kt)("inlineCode",{parentName:"li"},"Unsat.JStat")," type, and ",(0,i.kt)("inlineCode",{parentName:"li"},"satJStat"),"\nwould separately traverse the AST to make the simple type conversion.\nSince ",(0,i.kt)("inlineCode",{parentName:"li"},"jsSaturate")," was never used without calling ",(0,i.kt)("inlineCode",{parentName:"li"},"satJStat")," directly\nafter, these can be combined to traverse the AST and instantiate\nunsaturated constructors in one pass.\n",(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23328"},"GHC#23328"),(0,i.kt)("a",{parentName:"li",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10369"},"GHC!10369")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Josh: Added the type of an STG closure to various STG data types so that\nit's passed through ",(0,i.kt)("inlineCode",{parentName:"p"},"GHC.CoreToStg.PreStgRhs")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"GHC.CoreToStg.StgRhsClosure"),".\nWith this, we no longer have to guess types based on other information available\nduring JavaScript code generation. This fixes some issues that were revealed\nin the testsuite.\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10261"},"GHC!10261")))),(0,i.kt)("h2",{id:"ghc-proposal-0134-deprecated-exports"},"GHC Proposal #0134 (Deprecated Exports)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Bartek: found a bug in warnings about duplicate exports when exporting T(..).\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/23318"},"GHC#23318"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Bartek: Finished exporting part of the renamer for the Deprecating Exports proposal.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10283"},"GHC!10283")))),(0,i.kt)("h2",{id:"performance"},"Performance"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Jeff: First case study on performance engineering for the ",(0,i.kt)("a",{parentName:"p",href:"https://input-output-hk.github.io/hs-opt-handbook.github.io/"},"Haskell\nOptimization\nHandbook")," is done\nand has been published.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Josh: Added a GHC testsuite performance test for measuring memory allocations\nof encoding.\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/10347"},"GHC!10347")))),(0,i.kt)("h2",{id:"modularity"},"Modularity"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Jeff: Has begun to consolidate the\n",(0,i.kt)("a",{parentName:"li",href:"https://hsyl20.fr/home/files/papers/2022-ghc-modularity.pdf"},"ghc-modularity"),"\npaper for a\n",(0,i.kt)("a",{parentName:"li",href:"https://icfp23.sigplan.org/home/funarch-2023#Call-for-Papers"},"FUNARCH"),"\nsubmission. See you at ICFP!")),(0,i.kt)("h2",{id:"tooling"},"Tooling"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Sylvain: fixed Stack's hi-file-parser to support GHC 9.4.5 and GHC 9.6.1. See\nticket\n",(0,i.kt)("a",{parentName:"li",href:"https://github.com/commercialhaskell/hi-file-parser/issues/12"},"hi-file-parser#12"),"\nand PR\n",(0,i.kt)("a",{parentName:"li",href:"https://github.com/commercialhaskell/hi-file-parser/pull/14"},"hi-file-parser#13"),".")))}d.isMDXComponent=!0}}]);