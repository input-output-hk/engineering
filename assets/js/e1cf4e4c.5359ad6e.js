"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[2231],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),g=a,m=c["".concat(s,".").concat(g)]||c[g]||h[g]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8940:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},assets:function(){return u},toc:function(){return h},default:function(){return g}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={slug:"2024-01-18-ghc-update",title:"IOG GHC Update #23",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},s=void 0,p={permalink:"/2024-01-18-ghc-update",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2024-01-18-ghc-update-23.md",source:"@site/blog/2024-01-18-ghc-update-23.md",title:"IOG GHC Update #23",description:"Triweekly update from the GHC DevX team at IOG.",date:"2024-01-18T00:00:00.000Z",formattedDate:"January 18, 2024",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:1.205,truncated:!0,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"},{name:"Luite Stegeman",title:"Haskell DevX Engineer @ IOG",email:"luite.stegeman@iohk.io",key:"luite"},{name:"Joshua Meredith",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"josh"}],frontMatter:{slug:"2024-01-18-ghc-update",title:"IOG GHC Update #23",authors:["sylvain","doyougnu","luite","josh"],tags:["ghc","ghc-update"]},prevItem:{title:"IOG GHC Update #24",permalink:"/2024-02-08-ghc-update"},nextItem:{title:"IOG GHC Update #22",permalink:"/2024-01-04-ghc-update"}},u={authorsImageUrls:[void 0,void 0,void 0,void 0]},h=[{value:"High level summary",id:"high-level-summary",children:[],level:2},{value:"Details",id:"details",children:[],level:2}],c={toc:h};function g(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Triweekly update from the GHC DevX team at IOG."),(0,i.kt)("p",null,"Previous updates can be found ",(0,i.kt)("a",{parentName:"p",href:"https://engineering.iog.io/tags/ghc-update"},"here"),"."),(0,i.kt)("h2",{id:"high-level-summary"},"High level summary"),(0,i.kt)("p",null,"This sprint the team prepared a survey (internal to IOG) to find the most\npressing issues with the Haskell toolchain and what we could improve. Responses\nare still incoming and will be analyzed during the next sprint."),(0,i.kt)("p",null,"Performance of the Haskell toolchain is a common complaint, even before this\nsurvey. The team is working on tracking GHC performance across releases and\nthe team made progresses on a report about this topic."),(0,i.kt)("p",null,"Finally the team worked on loose ends of the JS backend that would be\nnice to have in the upcoming GHC 9.10 release: code optimizer, support for linking with\nC sources (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"sqlite")," works), tracking code size in CI, pure Haskell implementation of\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"bytestring")," package."),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("p",null,"Sylvain: update haskell.nix documentation for non-nix users. See\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/haskell.nix/pull/2006"},"haskell.nix")," and\n",(0,i.kt)("a",{parentName:"p",href:"https://input-output-hk.github.io/haskell.nix/"},"rendered result")," once the rendering pipeline is fixed."),(0,i.kt)("p",null,"Sylvain: support for C sources in the JS backend: ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11502"},"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11502")),(0,i.kt)("p",null,"Luite: Worked on adding tests to the JS backend optimizer: ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11507"},"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11507")),(0,i.kt)("p",null,"Sylvain: pure Haskell implementation of the ",(0,i.kt)("inlineCode",{parentName:"p"},"bytestring")," package: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/haskell/bytestring/pull/631"},"https://github.com/haskell/bytestring/pull/631")),(0,i.kt)("p",null,"Jeff: Returned to working on the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/haskellfoundation/hs-opt-handbook.github.io"},"Haskell Optimization Handbook")),(0,i.kt)("p",null,"Jeff: Worked on patching GHC's CI to track executable sizes for more backends: ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11551"},"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/11551")),(0,i.kt)("p",null,"Josh: worked on using recently added STG tags to improve code generation: ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/24309"},"https://gitlab.haskell.org/ghc/ghc/-/issues/24309")),(0,i.kt)("p",null,"Josh: improved graphs for the Haskell toolchain performance report and added testing for template Haskell performance."))}g.isMDXComponent=!0}}]);