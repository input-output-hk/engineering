"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[3706],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(r),d=a,g=c["".concat(p,".").concat(d)]||c[d]||h[d]||i;return r?n.createElement(g,o(o({ref:t},u),{},{components:r})):n.createElement(g,o({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},6462:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},assets:function(){return u},toc:function(){return h},default:function(){return d}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],l={slug:"ghc-update-2022-04",title:"GHC April 2022 Update",authors:["sylvain","doyougnu"],tags:["ghc","ghc-update"]},p=void 0,s={permalink:"/ghc-update-2022-04",editUrl:"https://github.com/input-output-hk/engineering/tree/master/blog/2022-05-13-ghc-update-2022-04.md",source:"@site/blog/2022-05-13-ghc-update-2022-04.md",title:"GHC April 2022 Update",description:"Welcome to the (rather late) April 2022 monthly update from the GHC DevX team at IOG. Since the last update we've continued work on the upcoming JavaScript backend for GHC. Unfortunately, we have nothing to show quite yet but that doesn't mean nothing has happened! On the contrary, we've made great progress and are close to that crucial first milestone hello world. Besides our work on the JavaScript backend, we were pleased to finally push through the Modularizing GHC paper that Sylvain has been working on for 2+ years! It causes quite the splash on the Haskell discourse and reddit, we recommend reading it if you haven't already (links below). Alright, enough introduction let's get into the update.",date:"2022-05-13T00:00:00.000Z",formattedDate:"May 13, 2022",tags:[{label:"ghc",permalink:"/tags/ghc"},{label:"ghc-update",permalink:"/tags/ghc-update"}],readingTime:1.94,truncated:!1,authors:[{name:"Sylvain Henry",title:"Haskell DevX Engineer @ IOG",email:"sylvain.henry@iohk.io",key:"sylvain"},{name:"Jeffrey M. Young",title:"Haskell DevX Engineer @ IOG",url:"https://iog.io/en/",key:"doyougnu"}],frontMatter:{slug:"ghc-update-2022-04",title:"GHC April 2022 Update",authors:["sylvain","doyougnu"],tags:["ghc","ghc-update"]},prevItem:{title:"JavaScript, Template Haskell and the External Interpreter",permalink:"/2022-05-17-javascript-template-haskell-external-interpreter"},nextItem:{title:"Setting up Csaba's External STG Interpreter",permalink:"/2022-05-02-setup-ext-stg-interp"}},u={authorsImageUrls:[void 0,void 0]},h=[{value:"JavaScript Backend",id:"javascript-backend",children:[],level:2},{value:"Modularity paper",id:"modularity-paper",children:[],level:2}],c={toc:h};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Welcome to the (rather late) April 2022 monthly update from the GHC DevX team at IOG. Since the last update we've continued work on the upcoming JavaScript backend for GHC. Unfortunately, we have nothing to show quite yet but that doesn't mean nothing has happened! On the contrary, we've made great progress and are close to that crucial first milestone ",(0,i.kt)("inlineCode",{parentName:"p"},"hello world"),". Besides our work on the JavaScript backend, we were pleased to finally push through the ",(0,i.kt)("a",{parentName:"p",href:"https://hsyl20.fr/home/posts/2022-05-03-modularizing-ghc-paper.html"},"Modularizing GHC")," paper that Sylvain has been working on for 2+ years! It causes quite the splash on the Haskell discourse and reddit, we recommend reading it if you haven't already (links below). Alright, enough introduction let's get into the update."),(0,i.kt)("h2",{id:"javascript-backend"},"JavaScript Backend"),(0,i.kt)("p",null,"We have made the following progresses in the implementation of a JavaScript\nbackend for GHC (adapted from GHCJS):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"linker"),": ported GHCJS's linker code into GHC. A lot of code was duplicated from GHC and\nslightly modified for GHCJS's needs, making the process far from trivial.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"testsuite"),": fixed Hadrian to run GHC's testsuite with cross-compilers\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7850"},"!7850"),". There are\nremaining issues though (see\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/issues/21292"},"#21292"),").")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"build system"),': fixes for GHC\'s configure script were ported (e.g. support for\nthe "ghcjs" target in ',(0,i.kt)("inlineCode",{parentName:"p"},"config.sub"),"). GHCJS's custom\nbuild script was integrated into ",(0,i.kt)("inlineCode",{parentName:"p"},"configure.ac"),". We can now\nconfigure the build with: ",(0,i.kt)("inlineCode",{parentName:"p"},"./configure --target=js-unknown-ghcjs"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"TH"),": we have conducted some experiments to find the best way to bridge GHCJS's\nTH runner and GHC's external interpreter. This will be described in details in\na future blog post.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"FFI"),': basic support for JavaScript FFI has been ported from GHCJS to GHC. We\nhaven\'t ported the JavaScript parser, so we have dropped the fancy import\nsyntax (e.g. "$1.xyz"). It should be enough to build boot libraries and we\nwill add JS parsing support later.'))),(0,i.kt)("p",null,"At this stage, we are working on building boot libraries and on supporting\nlinking with the JS RTS."),(0,i.kt)("p",null,"Development happens in the following branch: ",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/tree/wip/js-staging"},"https://gitlab.haskell.org/ghc/ghc/-/tree/wip/js-staging")),(0,i.kt)("h2",{id:"modularity-paper"},"Modularity paper"),(0,i.kt)("p",null,'Sylvain, Jeffrey, and John Ericson (from Obsidian Systems) wrote a paper about\n"modularizing GHC" using domain-driven design.'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Announce blog post: ",(0,i.kt)("a",{parentName:"li",href:"https://hsyl20.fr/home/posts/2022-05-03-modularizing-ghc-paper.html"},"https://hsyl20.fr/home/posts/2022-05-03-modularizing-ghc-paper.html")),(0,i.kt)("li",{parentName:"ul"},"Paper: ",(0,i.kt)("a",{parentName:"li",href:"https://hsyl20.fr/home/files/papers/2022-ghc-modularity.pdf"},"https://hsyl20.fr/home/files/papers/2022-ghc-modularity.pdf")),(0,i.kt)("li",{parentName:"ul"},"Reddit: ",(0,i.kt)("a",{parentName:"li",href:"https://www.reddit.com/r/haskell/comments/uhdu4l/modularizing_ghc_paper/"},"https://www.reddit.com/r/haskell/comments/uhdu4l/modularizing_ghc_paper/")),(0,i.kt)("li",{parentName:"ul"},"Discourse: ",(0,i.kt)("a",{parentName:"li",href:"https://discourse.haskell.org/t/modularizing-ghc-paper/4471"},"https://discourse.haskell.org/t/modularizing-ghc-paper/4471"))),(0,i.kt)("p",null,"We've got a lot of great feedback about it (expect a first revision soon).\nWe also got a GHC contribution directly inspired by the paper (see\n",(0,i.kt)("a",{parentName:"p",href:"https://gitlab.haskell.org/ghc/ghc/-/merge_requests/8160"},"!8160"),") which was\nvery welcome!"))}d.isMDXComponent=!0}}]);